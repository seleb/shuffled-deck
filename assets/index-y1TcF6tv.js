(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const n of t.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&c(n)}).observe(document,{childList:!0,subtree:!0});function r(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function c(e){if(e.ep)return;e.ep=!0;const t=r(e);fetch(e.href,t)}})();const p="shuffled-deck",h="1.0.2",g="simple rng for a standard 52-card playing deck",y="Sean S. LeBlanc <sean.s.leblanc@gmail.com>",k="MIT",b="module",v={type:"git",url:"git+https://github.com/seleb/shuffled-deck.git"},E={plugins:["@semantic-release/commit-analyzer","@semantic-release/release-notes-generator","@semantic-release/changelog","@semantic-release/npm",["@semantic-release/github",{successComment:!1,failTitle:!1}],["@semantic-release/git",{assets:["CHANGELOG.md","package.json","package-lock.json"]}]]},S={postversion:"npm run build",start:"vite --port 80",typecheck:"tsc",build:"vite build",preview:"vite preview"},w={"modern-normalize":"^3.0.1",typescript:"^5.6.2",vite:"^6.0.5"},L={private:!0,name:p,version:h,description:g,author:y,license:k,type:b,repository:v,release:E,scripts:S,devDependencies:w},O=["spades","hearts","diamonds","clubs"],j=[1,2,3,4,5,6,7,8,9,10,11,13,14],P=["spades","hearts","diamonds","clubs"].reduce((s,o,r)=>({...s,[o]:r*16}),{}),q={1:"ace",2:"two",3:"three",4:"four",5:"five",6:"six",7:"seven",8:"eight",9:"nine",10:"ten",11:"jack",12:"knight",13:"queen",14:"king"};function l({suit:s,value:o}){const r={back:127136,joker:127167};if(r[o])return String.fromCodePoint(r[o]);const c=r.back;return String.fromCodePoint(c+P[s]+parseInt(o,10))}function a(){const s=[],o=parseInt(document.getElementById("jokers").value,10);new Array(o).fill(0).forEach(()=>s.push({suit:"",value:"joker"})),O.forEach(e=>j.forEach(t=>s.push({suit:e,value:t})));const r=[];for(;s.length;)r.push(s.splice(Math.floor(Math.random()*s.length),1)[0]);const c=document.getElementById("deck");c.innerHTML="",r.forEach(({suit:e,value:t})=>{const n=document.createElement("li");function m(){n.innerText=l({suit:e,value:t}),n.className=e,n.title=`${q[t]||t}${e&&` of ${e}`}`,n.onclick=i}function i(){n.innerText=l({value:"back"}),n.className="back",n.title="",n.onclick=m}i(),c.appendChild(n)})}const u=document.querySelector("#preloader"),d=document.querySelector("button"),f=document.querySelector("#version");if(!u||!d||!f)throw new Error("could not find elements");d.addEventListener("click",a);a();f.textContent=L.version;u.remove();
